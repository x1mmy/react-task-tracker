{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/Task..js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Footer","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTasks","setShowAddTasks","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updTask","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9401157c.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ( {color, text, onClick}) => {\r\n    return( \r\n    <button \r\n    onClick={onClick} \r\n    style= {{backgroundColor: color}}\r\n    className='btn'>\r\n        {text}\r\n    </button> \r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    \r\n    \r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1> \r\n            <Button color= {showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick = {onAdd}/>\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n//CSS in JS\r\n// const headingStyle = {\r\n//     color: 'blue',\r\n//     backgroundColor: 'black'\r\n// }\r\n\r\nexport default Header\r\n","const Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p><b>How to use: </b><br />\r\n                - Press Add in order to place a new task\r\n                <br />\r\n                - Press the cross in order to delete a task\r\n                <br />\r\n                - Double click a task in order to turn a reminder on or off \r\n            </p>\r\n            <br />\r\n            <br />\r\n            <p>Copyright &copy; 2021</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className= {`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text} <FaTimes style={{color: 'red', cursor: 'pointer' }} onClick= { () => onDelete(task.id)}/> \r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task.\"\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task, index) => (\r\n                <Task \r\n                    key={index} \r\n                    task={task}\r\n                    onDelete={onDelete} \r\n                    onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from \"react\"\r\n\r\n\r\nconst AddTask = ({onAdd}) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)    \r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if(!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd ({text, day, reminder}) \r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit} >\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' value={text}\r\n                onChange= {(e) => setText(e.target.value) } />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time</label>\r\n                <input type=\"text\" placeholder='Add Day & Time' value={day}\r\n                onChange= {(e) => setDay(e.target.value) }/>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder} value={reminder}\r\n                onChange= {(e) => setReminder(e.currentTarget.checked) }/>\r\n            </div>\r\n\r\n            <input type=\"submit\" value='Save Task' className='btn btn-block'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState,  useEffect } from 'react'\nimport {BrowserRouter as Router, Route } from 'react-router-dom'\nimport { FaTrashAlt } from 'react-icons/fa';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\n\n\nfunction App() {\n  const [showAddTasks, setShowAddTasks] = useState(false)\n  const [tasks, setTasks] = useState([])\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks()\n      setTasks(tasksFromServer)\n    }\n\n    getTasks()\n  }, [])\n\n  //Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch ('http://localhost:5000/tasks')\n    const data = await res.json()\n    \n    return data\n  }\n\n    //Fetch Task\n    const fetchTask = async (id) => {\n      const res = await fetch (`http://localhost:5000/tasks/${id}`)\n      const data = await res.json()\n      \n      return data\n    }\n\n//Add Task\nconst addTask = async (task) => {\n  const res = await fetch(`http://localhost:5000/tasks`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json'\n    },\n    body:JSON.stringify(task)\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n  \n  // const id = Math.floor(Math.random() *\n  // 1000) + 1\n  // const newtask = {id, ...task}\n  // setTasks([...tasks, newtask])\n  \n}\n\n  //Delete Task\n  const deleteTask = async (id) => {\n    await fetch (`http://localhost:5000/tasks/${id}`,{\n      method: 'DELETE'\n    })\n\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n\n  //Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updTask)\n    })\n\n    const data = await res.json()\n\n    setTasks(\n      tasks.map((task) => \n        task.id === id ? { ...task, reminder:\n        !task.reminder} : task\n    )\n  )\n  }\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header \n          onAdd={() => setShowAddTasks(!showAddTasks)} showAdd={showAddTasks}\n        /> \n        {showAddTasks && <AddTask onAdd = {addTask} />}\n        {tasks.length > 0 ? <Tasks tasks={tasks}  onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks to Show'}\n        \n        \n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}